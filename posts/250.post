Author: Attila Nagy
Subject: Separating Heapkeeper heap and UMS heap
Message-Id: <20090519094841.2067be8f.nagy.attila.1984@gmail.com>
Parent: <4A11A86F.9050601@gmail.com>
Date: Tue, 19 May 2009 09:48:41 +0200

> Heapkeeper heap and UMS heap have been living as one entity until now.
> I think it is worth to start to think and talk about how should we
> separate them.

Absolutely.
 
> == Reorganizing Hh heapids ==
> 
> Usually it is a very bad idea to modify the heapids of existing posts.
> In Hh's case, on the other hand, I think it would be rather desirable.
> Hh's index page otherwise would look weird for new people.

Do you have any idea for this mass-renaming? We'd have to take care of
any in-body references as well as heapids in In-Reply-To: headers. No
simple task, especially the latter. Maybe we should add a feature for
this to hklib? Then, anyone facing this problem later would have a
readily usable solution.

> == Heapkeeper support for managing several heaps ==
> 
> Hk should have a good support for managing both heaps at the same
> time. We want to be able to write commands like this:
> 
>     >>> ums_heap = heap('~/documents/heaps/ums')
>     >>> hh_heap = heap('~/documents/heaps/hh')
>     >>> ums = ums_heap.postdb()
>     >>> hh = hh_heap.postdb()
>     >>> p = ums.post('123')
>     >>> p.move(hh)

Nice examples! Of course, we'd have to take great care when moving,
since heapids are heap-specific, so if a parent message is specified
via its heapid, it will break when moved. Basically the same issue as
with renumbering the split-off heap.

> Posts can reference to each other, so probably it will not be this
> simple. (Or the implementation has to be smart in some way to make it
> simple.)

Which is also manageable as long as the format is precisely specified,
as with headers. It is the body that makes me worried.
