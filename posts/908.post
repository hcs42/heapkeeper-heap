Author: Csaba Hoch
Subject: The openness algorithm of the issue tracker
Tag: discussion
Tag: reviewed
Message-Id: <4AFA43BE.4040409@gmail.com>
Parent: <b29f917d0911071114scb4ce93j7c7adfe000f1488f@mail.gmail.com>
Date: Wed, 11 Nov 2009 05:55:26 +0100

> [note I think we've already had a discussion on this, but I don't
> remember any details.]

See heap://hh/222

>     def is_open(root):
>         postdb = root._postdb
>         openness = 0
>         if root.has_tag('prop'):
>             openness += 1
>         for post in postdb.postset(root).expf():
>             if tag_in_body(post, 'open'):
>                 openness += 1
>             elif tag_in_body(post, 'close'):
>                 openness -= 1
>         return openness > 0

This is the current code (_hcs branch, issue_tracker.py:363):

    def is_thread_open(self, root):
        openness = 0
        if (root.has_tag('prop') or root.has_tag('issue') or
            root.has_tag('bug') or root.has_tag('feature')):
            openness += 1
        for post in self._postdb.postset(root).expf():
            if 'open' in post.meta_dict():
                openness += 1
            elif 'close' in post.meta_dict():
                openness -= 1
        return openness > 0

== #4: One issue split and one part resolved ==

>     <1> Attis Bug found \[bug\]
>     Doing X causes errors during index generation.
>     \[open\]
>
>       <2> Attis Double bug! \[bug\]
>       I discovered that the errors are a result of two discinct bugs,
>       A and B.
>
>         <3> Attis Bug A \[bug\]
>         Bug A affects module M.
>
>           <4> Csabi Bug A: suggestion \[bug\]
>           You should correct this bug by doing 1.
>
>             <5> Csabi Bug A: solution \[bug\]
>             I have pushed a bugfix.
>
>               <6> Attis Bug A: solution \[bug\]
>               Thanks!
>               \[close\]
>
>         <7> Attis Bug B \[bug\]
>         Bug A affects module N.
>
> Openness table:
>
>     1   1
>     2   1
>     3   1
>     4   1
>     5   1
>     6   0
>     7   0
>
> This is not handled as expected. We should be extra careful when
> splitting issues.

When you wrote this, you thought that "bug" was not a keyword, so
let's suppose the tag is not there.

In this case, the result is expected: someone opened an issue and
someone closed it. Then someone commented on it without reopening it.
If the author of post <7> wanted to reopen the ticket (or make it more
open if he composed it before receiving <6>), then he should have
write an "open" tag into it.

    <7> Attis Bug B \[bug\]

    [open]

    Bug A _also_ affects module N.

== #4: Proposal with "open" tag ==

> A user who is not familiar with this algorithm may add an "open" tag
> to a proposal, resulting in a double-open state that has to be closed
> twice, like this:
>
>     <1> Attis Important proposal \[prop\]
>     We should improve X immediately.
>     \[open\]
>
>       <2> Csabi Important proposal \[bug\]
>       I have improved X and pushed the changes.
>       \[close\]
>
> Openness table:
>
>     1   2
>     2   1
>
> This is not handled as expected.

The first algorithm disregarded the 'open' tag in the root post, and I
guess that's what you propose.

It's not difficult to do if we want it:

        def is_thread_open(self, root):
            openness = 0
            if (root.has_tag('prop') or root.has_tag('issue') or
                root.has_tag('bug') or root.has_tag('feature')):
                openness += 1
            for post in self._postdb.postset(root).expf():
    -           if 'open' in post.meta_dict():
    +           if 'open' in post.meta_dict() and post != root:
                    openness += 1
                elif 'close' in post.meta_dict():
                    openness -= 1
            return openness > 0

If that's your proposal, I support it because maybe some threads have
for example a 'problem' tag that's not handled as an issue, but later
we may qualify it as one. At that point if we used the current
behavior and added the new tag as an issue-tag, we would suddenly get
a lot of open issue (because the root posts of the 'problem' threads
contain [open] meta.)

== Multiple open/close in one ticket ==

We could have another discussion about having multiple open/close in
one post:

     <1> Attis Bug found \[bug\]
     There is a bug: A

       <2> Attis Triple bug! \[bug\]
       There is also bug B and C!
       [open]
       [open]

         <3> Attis Triple bug! \[bug\]
         B solved.
         [close]

         <4> Attis Triple bug! \[bug\]
         C also solved.
         [close]

       <5> Attis Triple bug! \[bug\]
       There is also bug D!
       [open]

       <6> Attis Triple bug! \[bug\]
       There is also bug E!
       [open]

         <7> Attis Triple bug! \[bug\]
         D and E was caused by the same things. Fixed now.
         [close]
         [close]

Or:

     <1> Attis Double bug found \[bug\]
     Two bugs, possibly related: A, B
     [open]
     [open]

In this case, we should not disregard the [open] metas, but we should
disregard the "bug" tag! They are the same when only one "open" meta
is allowed, but they are different when we have more meta.

Does not seem to be sensible, but who knows:

     <1> Attis Talking in himself\[bug\]
     Bug A and B found.
     [open]
     [open]
     And they also have been solved.
     [close]
     [close]

So if the root has any [open] or [close] metas, their tag is
irrelevant. If they have nothing, than the issue-tags are considered
as an implicit open tag.

I think it is a nice behavior that I described, but I have no
incentive now to implement it, I haven't seen any issue up until now
where it could have been useful. But one day it shall be done. Shall
we open a "feature"? :) (This thread could be the issue thread.)
