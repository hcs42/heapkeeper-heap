Author: Csaba Hoch
Subject: Body parsing - the what - examples
Tag: post syntax
Tag: prop
Tag: reviewed
Message-Id: <4A125AFB.1060406@gmail.com>
Parent: <20090518011928.99444ebf.nagy.attila.1984@gmail.com>
Date: Tue, 19 May 2009 09:08:43 +0200

This page should be a wiki page on the heap. (See this thread [1]
about wiki pages on the heap.) I agree with everything I haven't
commented.

== Place of meta text ==

=== Link appearance ===

> [...]
>
> Plaintext:
>
>    Please have a look at <<<link http://www.example.com this site>>>.

Previously we agreed on allowing the <<< and >>> of the meta text only
in the beginning of the lines [2]. Have you changed your mind about
this?

== Cites ==

I would also like to write emails like this:

   Our website [1] should be improved according to them [2].

   [1] Currently http://hste.uw.hu/heapkeeper/index.html
   [2] http://www.boring.org, section "Heapkeeper is boring"

== Quotes ==

> Finding quotes is important for two reasons. Firstly, collecting quoted
> parts of the body into specific HTML elements allows for styling them
> via CSS, which may be more readily recognizable than quote introduction
> characters (>) alone.
>
> Secondly, the program can use the thread structure and quotation depth
> together to find the original author of the quoted lines. Quote
> introduction lines could be parsed and used in determining the authors
> or could simply be thrown away.

A third reason is to process quotes differently: e.g. we don't want to
interpret cite heads in quotes.

> After quote expansion, pass 2:
>
>    Quote     [
>
>        Quote   [
>
>            Quote [We should use Ratpoison.]
>
>            Boundary    []
>
>            Plaintext [What is ratpoison?]
>            ]
>
>        Boundary    []
>
>        Plaintext   [Ratpoison is a minimalistic window manager.]
>        ]
>
>    Boundary  []

Are you sure this recursive structure is the best one?

The following structure seems to be better for me:

    Quote,3   [We should use Ratpoison.]
    Quote,2   [What is ratpoison?]
    Quote,1   [Ratpoison is a minimalistic window manager.]
    Boundary  []
    Plaintext [Why do you think we all should use it?]

I think from the parser's point of view the two approaches need equal
amount of work. From the HTML presentation's point of view, yours is
probably easier. From the point of view of all the other processors,
though, I think my approach is simpler.

== Unknown metas ==

> I think unknown metas should be displayed specially, as they require
> attention from an editor.

I agree.

== Authors and signatures ==

> If a line matches entirely with an author's known and stored nickname,
> it should be ignored.

Why?

> But, regardless of whether a signature line is present, a signature
> should be added in the HTML rendering.

OK. I don't see the use of this, but if you like it, go ahead.

== Wiki-like headers ==

> The idea of MediaWiki-like syntax for headers has been proposed (and
> this post happens to follow this syntax :)). This feature is enabled
> only if the <<<wiki>>> meta is present.
>
> Plaintext:
>
>    <<<wiki>>>
>    == Bacteria ==
>
>    Bacteria are the most simple cellular organisms.
>
> Initial segmenting:
>
>    Plaintext [<<<wiki>>>\n== Bacteria ==]

I don't know how do you think the parser will work, but I would think
it never creates that text. It is highly illogical to me that our main
text object is the TeX-like paragraph, and everything else is parsed
from those. Consider this:

    <<<note

    This is a long note.

    Eh.>>>

In my opinion we can create the following text objects in first go:
- quote blocks
- meta text blocks
- text blocks
- raw blocks (lines that start with whitespace and would be in a text
  block otherwise)

The first go takes into account only the first few characters of each
line.

We can create these in the second go:
- quote paragraphs
- text paragraphs

In case of the wiki syntax, another go would happen between the first
and the second ones: the one that creates the headers.

== TODO ==

> There are probably many other things that the body parser should do. I
> think none of these have a consequence that will change the
> architecture of body parsing. If you know of any, please post it here.

I just posted one :)

=== Itemization ===

And here is another one. I write itemizations very frequently. Like
these:

    Nice animals:
    - cat
    - dog
    - fish

    We could do:
    a. this
    b. that

    If we choose (a), we have to:
    1. start
    2. stop

We have to find a way to render these. (I haven't found yet.)

[1] heap://hh/4
[2] heap://ums/1176
