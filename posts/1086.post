Author: Csaba Hoch
Subject: Concerns about the workflow
Tag: workflow
Message-Id: <4ddb9e5b1002060712p78e5cf16rceb828d59c51dd82@mail.gmail.com>
Parent: <20100205163915.64354f9f.nagy.attila.1984@gmail.com>
Date: Sat, 6 Feb 2010 16:12:22 +0100

>> If I decide to rebase something, I can't do it without effecting you.
>> That's OK, but we should have a place where I describe what I did, so
>> that when you start your work, you can catch up, destroy the necessary
>> branches etc. This would be an informal git log: it would log the
>> reality and not the rewritten reality. It would be nice if you could
>> mark the log entries as "read" or "done". It should be a linear list
>> of changes, maybe with some comments intervened.
>
> An intriguing idea. How would you implement it?

My only idea is to use Wave.

> Don't you think the need for such a "reality log" means that we should
> give up our rebasing workflow?

Maybe we should. I have described a method we could use in another thread [1].

> Maybe the way to handle the topics we used to discuss on the Wave
> would be best handled by a new heap. This could serve as a kind of
> bulletin board where we could post our plans, a summary of our daily
> work etc. What do you think?

Wave is nice because the messaging can become instant dynamically. But
we can try out your suggestion.

> We've been doing this for one or two months now. I think it works: you
> do most of the development, while I'm trying to follow you, and from
> time to time, I contribute something useful to the code. What do you
> think?

That's OK.

>> I think these are the biggest problems, and that's what I think
>> we could do about it:
>> 1. Find a better way to describe the state of the tree. Either inside
>>    our outside of Wave, I don't know. The goal is to be very tidy, and
>>    maybe Wave does not force us to have a discipline.
>
> I love `gitk`. And in git, tags are cheap. How about having tags like
> "waiting-for-attis-review-start" and "waiting-for-attis-review-end"?
> OK, sounds wild, but I think we should give it a try.

I dislike the idea of using tags for this purpose. Tags are very
official things: they show up in the download page on github [2], and
tags are not meant to be deleted (I think they are harder to delete
than branches.)

>> 2. Let's have a reality log. Maybe Wave, maybe not.
>
> Reality log... I just don't know. Git does this, in a sense. It keeps
> two timestamps for the commit and the code. When we rebase, only the
> commit timestamp changes. Maybe a "reality log" is only a matter of
> sorting commits by code timestamps?

The reality log is mainly about the reasons of why something was
rebased. It is not about storing dates, it is about how and why branch
X got modified. It is mainly for developers who want to understand why
a remote branch disappeared or got rebased, and what is the difference
between the old and the new version of the branch.

If we have a new heap that you proposed, we may have a special tag for
reality log. These posts would explain how and why certain rebases
happened.

>> 3. Have a one week timeout for proposals. I.e. if there is no
>>    discussion nor agreement for one week, the proposer can go ahead.
>
> I think this is already in effect, and it works.

I think that it works, too. The proposal was about having this timeout
without explicit mention. What do you think about that?

[1] heap://hh/1015
[2] http://github.com/hcs42/heapkeeper/downloads
