Author: Csaba Hoch
Subject: Storing our post files on GitHub
Tag: idea
Tag: reviewed
Message-Id: <4A12E71F.4090100@gmail.com>
Parent: <20090519074642.1509eb79.nagy.attila.1984@gmail.com>
Date: Tue, 19 May 2009 19:06:39 +0200

> I think just do it. It is not a mailing list for its own sake, it's
> a mailing list that exists purely to create documentation for the
> project hosted at GitHub, hence, the mailing list archive is purely
> documentation.

I thought we would communicate with our users and other developers via HH.

> HH contains practically no personal information, so it's safe to
> publish. Of course, we'll have to double-check before a push to
> ensure there's really no sensitive information within. If it's
> difficult to remove nasty revisions from Wikipedia's database, with
> GitHub, it's even more painful.

I understand that you wrote this to prove that we should not have any
concerns, but as I read it, and started to have some... I thought that
when using Hkweb, the central repository should always have the
up-to-date version of the heap -- that is, it should contain the posts
sent 3 minutes ago. Even without the Hkweb, we could have a server
that pushes new posts to the repository in real time. That's how
mailing lists work -- if you post something, it is in the web archive
a few minutes later.

What you describe is not that. You say that every post has to go to
GitHub via a heap maintainer. It is feasible for us for now -- but
what happens when we have a greater audience, who indeed would like to
have that always-up-to-date feature? We would need an automatic
mechanism for updating the heap (i.e. the repository) -- either with
Hkweb or with a separate program. Will we stop using GitHub as the
repository of our post files then?

To conclude:

The advantages of using GitHub (with human repository updates):
- We would not have to pull from each other's PC.
- Anybody could download HH any play around with it.
- Anybody could make an HH-clone, make modifications and we could pull
  from them.

Main disadvantage:
- If something goes there, it will remain there forever.

I lean towards accepting GitHub as a temporary solution. With noting
that we will revisit the problem when we have Hkweb.
