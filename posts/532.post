Author: Csaba Hoch
Subject: "email" vs "mail"
Tag: commit
Message-Id: <4A8C6632.30709@gmail.com>
Parent: <b29f917d0908191300v7fd7685ft3e188b82dab580df@mail.gmail.com>
Date: Wed, 19 Aug 2009 22:53:06 +0200

>>>> Also, I would call the `mail` variable `email`.
>>> No good, as it would hide the `email` module! So, instead I corrected
>>> all "email"s to "mail", so that the naming will be consistent.
>> I think the word "mail" does not have a plural form. (At least in the
>> sense that "these are two mails"). You could call it "em" or "email_"
>> in the list comprehension, and you could use the emails_* variables in
>> all other places.
> 
> Of course, but really, does that matter? I mean the uncountable plural
> problem. I'm not native English, I am entitled to use bad grammar :)

It hurts my eyes :)

>> If we used the word "email" more often, I would even say importing
>> email with another name:
>>
>>    import email as email_mod
>>
>> Then you could have "email" variables.
> 
> Is this not bad practice in terms of code maintainability? If you do
> such a thing at the beginning of the code, readers of the function
> will wonder where that strange name came from.

You are probably right.

>> Do you know why did I change the word "mail" to "post" everywhere?
>> (Mail files -> post files, Mail -> Post, MailDB -> PostDB, etc.)
>> Because its plural sounds just unnatural. (Later I realized that
>> "post" sounds better from the of the Google Wave philosophy's point of
>> view .)
> 
> I think the new terminology's real usefulness comes from emphasizing
> the difference between an e-mail, that exists on an IMAP server, and a
> post, that lives in the mail directory and Hk's memory.

Yes, that's another advantage.
