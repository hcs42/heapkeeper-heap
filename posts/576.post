Author: Attila Nagy
Subject: Reviewed branches
Tag: repo
Message-Id: <b29f917d0909021719y6ec820b5w9084db622db88392@mail.gmail.com>
Date: Thu, 3 Sep 2009 02:19:49 +0200

[note I've used the "repo" tag to indicate that this post deals with
events that took place in the Hk repos.]

I have reviewed the outstanding branches. What I've done:

== Current branches of development ==

=== _e ===

I've accepted your commits, but I think these two commits should be
joined, so I joined them in my _e. (I feel they fall into the same
category as the "corrections" commits.) If you accept it, you can
advance "master" to this, else advance it to yours. (But if you
disagree, you don't have to explain it, just do it the way you like.)

=== _bugfix/_review ===

I've accepted it as it is in your repo, so my "_review" branch stands
exactly where yours does.

=== _fastdownload ===

I've squashed your "correction" commits into the previous ones. Again,
you are free to take it or leave it, in which case I'll point these
branches to your ones.

=== _dl-improved ===

I've implemented the improved functionality of `dl()` so that it can
now return the new posts in a  `PostSet`. I have my doubts, though...
see the thread on "Return value of `dl()`".

=== _golem ===

This is a special one. I wanted to use all these new features when
tidying up the UMS Heap, so I quickly integrated all them together.
It's called "golem" because it's my unholy creature whose purpose is
to serve me :) I could have left it local, but maybe it'll be useful
when you do the final integration of all these branches into your
"master".

== Summary ==

My repository is now filled with many branches. But since one of Git's
strongest points is the very cheap creation of branches, and branches
can be freely created and deleted on the remote (i.e. GitHub), I think
this is not a problem. Also since all of these are
underscore-branches, a.k.a. public remotes, no-one should complain
about these moving around constantly as the review process takes
place.
