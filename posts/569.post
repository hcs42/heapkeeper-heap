Author: Csaba Hoch
Subject: Splitting threads with multiple topics per post
Tag: idea
Message-Id: <4A9D6D3F.2080206@gmail.com>
Parent: <b29f917d0908300853o7d771e16yba3e3c14abb9ad1b@mail.gmail.com>
Date: Tue, 01 Sep 2009 20:51:43 +0200

>>> What we need to have this working:
>>> - mechanism to track the subthread specified
>> Do you mean expanding (105,107) to [105,106,107]?
>
> Yes.
>
>> I once described that PostDB.expf() and PostDB.exp() should have an
>> optional "stop" argument. (It's not implemented yet.) The following
>> example expands the post set that contains only post 105, but it stops
>> when it reaches 108:
>>
>>    >>> ps(105).expf(stop=[108])
>
> Yes, I remember this discussion. [1]
>
>> Generally, `stop` could be any post set.
>>
>> Currently there is a not so difficult workaround:
>>
>>    >>> ps(105).expf() - ps(108).expf()
>
> This does not do what we want. Suppose the thread looks like this:
>
>
>    <105>
>      <106>
>        <107>
>          <108>
>          <109>
>            <110>
>                <111>
>      <112>
>    <113>
>      <114>
>
> In this case, you could select "105..107" only as:
>
>     ps(105).expf() - ps(108).expf() - ps(112) - ps(113).expf()

OK.

This would be a job for expb then:

    >>> ps(107).expb(stop_with=[105])

`stop_with` would mean "stop at these post, but include them in the
result".

> My solution:
>
>     def straight(start, end):
>         now = p(end)
>         while True:
>             yield now
>             now = postdb().parent(now)
>             if now == p(start):
>                 yield now
>                 break
>
> This generates a straight line, so you don't have to care about
> branches.

Nice.
