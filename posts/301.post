Author: Attila Nagy
Subject: Body parsing - the what - examples
Tag: post syntax
Tag: prop
Message-Id: <b29f917d0905211025k7e03b34dt6dcb792e12100d8e@mail.gmail.com>
Parent: <4A125AFB.1060406@gmail.com>
Date: Thu, 21 May 2009 19:25:10 +0200

> This page should be a wiki page on the heap. (See this thread [1]
> about wiki pages on the heap.) Thus I've posted a todo about every
> typo. I agree with everything I haven't commented.

OK. Here, I'll comment on those comments that are questions or the
ones I don't agree. I accept all the others.

=== Special protocols ===

>> Some protocol specifiers, like "http", "https", "ftp" and "file",
>> are passed on to the HTML output unchanged. Others' have meanings
>
> <<<todo Is the apostrophe at the "Others'" an error?>>>

Yes.


== Place of meta text ==

=== Link appearance ===

>>    Please have a look at <<<link http://www.example.com this site>>>.
>
> Previously we agreed on allowing the <<< and >>> of the meta text only
> in the beginning of the lines [2]. Have you changed your mind about
> this?

No, not at all. But of course this feature is so "inline" that it'd
almost ruin its usability if we'd have to write it in a new line. Of
course I don't want to change the convention regarding the start of
metas, mainly for performance considerations. How about adopting
MediaWiki's solution instead? Thus, this example would look like:

    Please have a look at [http://www.example.com this site].

I think this would be the most convenient and less obtrusive solution.

== Cites ==

My proposition only provided two kind of cites. One cites an URL and
nothing else; the inline headers link right to the URL in this case.
The other adds some kind of explanation or comment, and for these, the
inline header link merely jumps to the body of the cite.

>> The different classes for the link enable the CSS to visually
>> distinguish links that'll move away from the page from links that'll
>> only jump inside the page.

> I would also like to write emails like this:
>
>   Our website [1] should be improved according to them [2].
>
>   [1] Currently http://hste.uw.hu/heapkeeper/index.html
>   [2] http://www.boring.org, section "Heapkeeper is boring"

Now, if I understand you correctly, you would also like to handle
those cites that fall into neither of these, namely, the ones which
contain both an URL and a textual comment. The question is, of course,
how should we handle these? Would the head link to the body, or right
to the URL contained in the body (assuming, of course, that there's
only one URI in the body!)

== Automatic action on metas (a.k.a. !-metas) ==

>> * <<<!deltext>>> - delete this meta
>> ** used to give throwaway hints to the
>
> <<<todo I think this sentence is unfinished.>>>

It should be "used to give throwaway hints to the maintainer of the
heap or pass information that is only important to the readers of the
original e-mail".

== Quotes ==

>> Finding quotes is important for two reasons. Firstly, collecting quoted
>> parts of the body into specific HTML elements allows for styling them
>> via CSS, which may be more readily recognizable than quote introduction
>> characters (>) alone.
>>
>> Secondly, the program can use the thread structure and quotation depth
>> together to find the original author of the quoted lines. Quote
>> introduction lines could be parsed and used in determining the authors
>> or could simply be thrown away.
>
> A third reason is to process quotes differently: e.g. we don't want to
> interpret cite heads in quotes.

We could interpret cite heads in quotes, but it would probably not be
worth the effort.

> Are you sure this recursive structure is the best one?

No, not at all. We should have a discussion dedicated solely to this
matter, maybe on Skype or IRC?

> I think from the parser's point of view the two approaches need equal
> amount of work. From the HTML presentation's point of view, yours is
> probably easier. From the point of view of all the other processors,
> though, I think my approach is simpler.

This point also needs to be clarified, and I'm really eager to hear
about your ideas. This, I think, is one of the most difficult matters
in body parsing.

== Authors and signatures ==

>> If a line matches entirely with an author's known and stored nickname,
>> it should be ignored.
>
> Why?

I've been omitting the signature from my posts from some time now. We
don't have to sign our mails since the body parser can put the
signature there automatically when displaying the post. But to avoid
having two signatures, we should ignore the signatures already
present. An equivalently viable approach would be to output the
generated signature only if there is the body itself does not contain
a signature.

== Wiki-like headers ==

>> Plaintext:
>>
>>    <<<wiki>>>
>>    == Bacteria ==
>>
>> Initial segmenting:
>>
>>    Plaintext [<<<wiki>>>\n== Bacteria ==]
>
> I don't know how do you think the parser will work, but I would think
> it never creates that text. It is highly illogical to me that our main
> text object is the TeX-like paragraph, and everything else is parsed
> from those. Consider this:
>
>    <<<note
>
>    This is a long note.
>
>    Eh.>>>
>
> In my opinion we can create the following text objects in first go:
> - quote blocks
> - meta text blocks
> - text blocks
> - raw blocks (lines that start with whitespace and would be in a text
>  block otherwise)

In general, I like the idea, but it seems to conflict with the idea of
modularity. If we hardwire these in the Dissector (in the current
implementation, this is the name of the module that creates the
initial segmentation), the module to process, say, quotes will not be
turned off by simply not loading its module into the parser framework.
Adding a new kind of object will not be impossible, though, only we
have to find them in the initial segments. Maybe the Dissector could
be customized: by default, it'd create all the text object you've
mentioned, but they could be turned off individually.

> The first go takes into account only the first few characters of each
> line.

Yes, this would be very important. Right now, parsing only the headers
is quite a task, with only ~2000 posts. Imagine what happens if the
whole body will be parsed!

> We can create these in the second go:
> - quote paragraphs
> - text paragraphs
>
> In case of the wiki syntax, another go would happen between the first
> and the second ones: the one that creates the headers.

OK.

=== Itemization ===

> And here is another one. I write itemizations very frequently. Like
> these:
>
>    Nice animals:
>    - cat
>    - dog
>    - fish
>
>    We could do:
>    a. this
>    b. that
>
>    If we choose (a), we have to:
>    1. start
>    2. stop
>
> We have to find a way to render these. (I haven't found yet.)

This is another important issue. I've also thought about them. I this
topic would also have to be included into our consultation.
