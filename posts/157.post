Author: Attila Nagy
Subject: Assess what we need for a usable product
Tag: prop
Tag: reviewed
Message-Id: <b29f917d0905021726r55f86a30u83b186b812d74754@mail.gmail.com>
Parent: <49FCD9D0.6050207@gmail.com>
Date: Sun, 3 May 2009 02:26:47 +0200

>> My list of what we need:
>> - a setup script
>
> Really? What do you mean by a setup script? A script that for
> example creates hk.cfg?

Yes.

> I'm not a fan of the idea. I think it is easier to edit a config
> file based on the tutorial than answering question. As least I hate
> answering questions for a script, because:

You don't have any kind of psychological restraints from diving into
using the program right away, of course, but don't forget that it's
you who wrote it. I think in the world of open source, when a
potential user (in our case, a user is an administrator) decides which
product to use, the ability to provide a user experience in a few
minutes without having to dig into manuals or follow tutorials could
be a clincher.

Believe me -- I've been at the other end of this situation plenty of times.

> - I don't see the full picture (e.g. all questions) when answering a
>   particular one.

You are right, but just think of .git/config. It's neither long nor
overly complicated, and it could perfectly be written by hand; still
it's a huge gain you don't have to do it every time you set up a new
repository. (Yes, I know, you don't set up a new repository all that
often, but some people version control everything, including saved
games :P)

> - You have to became familiar with the config file itself anyway if
>   you want to change a setting.

Probably not if all you want to do is change something later, e.g. if
the e-mail password changes.

> - It is usually impossible to go back if you later realize you give an
>   incorrect answer before; you can only redo the whole thing.

Of course a setup script doesn't have to be dumb. It takes love, care
and patience to do it, but using Dialog or Whiptale [1], you can do
things like elegant ncurses-based setup scripts with 'back' and 'next'
options.

[1] http://packages.ubuntu.com/dapper/whiptail
