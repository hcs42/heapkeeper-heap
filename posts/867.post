Author: Csaba Hoch
Subject: Augmentation in hkgen.Generator
Tag: discussion
Tag: issue
Tag: reviewed
Message-Id: <4ddb9e5b0911020445k714a8abeua491674cc536be64@mail.gmail.com>
Parent: <b29f917d0911020424g3c3feef9o684f48de73a2526e@mail.gmail.com>
Date: Mon, 2 Nov 2009 13:45:39 +0100

> Two questions:
> - why copy the `PostItem` object?

The reason is ugly, I have to admit.

We copy it because we don't want to change the PostItem object
returned by e.g. PostDB.walk_thread. PostDB.walk_thread stores the
'begin' PostItems, so it assumes that the post items it yield will not
change. Maybe walk_thread should copy the post items that it stores
and than augment_postitem will not have to copy it. I'll think about
this.

> - why alter the object instead of using `getattr` with the default
>  value `Generator.print_postitem` whenever a post item is printed?

Because it is nice that you can be sure that the post items have a
print_fun attribute. There are functions that wrap the post item's
original print_fun and create new print_funs based on this (e.g.
hkgen.Generator.{reverse_threads,enclose_posts,enclose_threads}. For
how to use them, see issue_tracker.Generator.enclose_issue_posts.). It
would not be nice if all those functions had to do this getattr-stuff.
These "post item modifier functions" should be as simple as possible,
because they are one of the main tools to customize generators.
